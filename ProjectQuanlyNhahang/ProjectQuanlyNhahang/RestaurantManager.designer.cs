#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectQuanlyNhahang
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyNhaHang")]
	public partial class RestaurantManagerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLOAITK(LOAITK instance);
    partial void UpdateLOAITK(LOAITK instance);
    partial void DeleteLOAITK(LOAITK instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertBAN(BAN instance);
    partial void UpdateBAN(BAN instance);
    partial void DeleteBAN(BAN instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAINV(LOAINV instance);
    partial void UpdateLOAINV(LOAINV instance);
    partial void DeleteLOAINV(LOAINV instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertHOADONNH(HOADONNH instance);
    partial void UpdateHOADONNH(HOADONNH instance);
    partial void DeleteHOADONNH(HOADONNH instance);
    partial void InsertLUONG(LUONG instance);
    partial void UpdateLUONG(LUONG instance);
    partial void DeleteLUONG(LUONG instance);
    partial void InsertNGUYENLIEU(NGUYENLIEU instance);
    partial void UpdateNGUYENLIEU(NGUYENLIEU instance);
    partial void DeleteNGUYENLIEU(NGUYENLIEU instance);
    partial void InsertCHITIETHDBH(CHITIETHDBH instance);
    partial void UpdateCHITIETHDBH(CHITIETHDBH instance);
    partial void DeleteCHITIETHDBH(CHITIETHDBH instance);
    partial void InsertHOADONBH(HOADONBH instance);
    partial void UpdateHOADONBH(HOADONBH instance);
    partial void DeleteHOADONBH(HOADONBH instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    #endregion
		
		public RestaurantManagerDataContext() : 
				base(global::ProjectQuanlyNhahang.Properties.Settings.Default.QuanLyNhaHangConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public RestaurantManagerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestaurantManagerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestaurantManagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestaurantManagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LOAITK> LOAITKs
		{
			get
			{
				return this.GetTable<LOAITK>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<BAN> BANs
		{
			get
			{
				return this.GetTable<BAN>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAINV> LOAINVs
		{
			get
			{
				return this.GetTable<LOAINV>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<HOADONNH> HOADONNHs
		{
			get
			{
				return this.GetTable<HOADONNH>();
			}
		}
		
		public System.Data.Linq.Table<LUONG> LUONGs
		{
			get
			{
				return this.GetTable<LUONG>();
			}
		}
		
		public System.Data.Linq.Table<NGUYENLIEU> NGUYENLIEUs
		{
			get
			{
				return this.GetTable<NGUYENLIEU>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHDBH> CHITIETHDBHs
		{
			get
			{
				return this.GetTable<CHITIETHDBH>();
			}
		}
		
		public System.Data.Linq.Table<HOADONBH> HOADONBHs
		{
			get
			{
				return this.GetTable<HOADONBH>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAITK")]
	public partial class LOAITK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LoaiTK1;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLoaiTK1Changing(string value);
    partial void OnLoaiTK1Changed();
    #endregion
		
		public LOAITK()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LoaiTK", Storage="_LoaiTK1", DbType="NVarChar(50)")]
		public string LoaiTK1
		{
			get
			{
				return this._LoaiTK1;
			}
			set
			{
				if ((this._LoaiTK1 != value))
				{
					this.OnLoaiTK1Changing(value);
					this.SendPropertyChanging();
					this._LoaiTK1 = value;
					this.SendPropertyChanged("LoaiTK1");
					this.OnLoaiTK1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITK_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="ID", OtherKey="LoaiTK")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAITK1 = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAITK1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenNhaCungCap;
		
		private System.Nullable<System.DateTime> _NgayHopTac;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<HOADONNH> _HOADONNHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenNhaCungCapChanging(string value);
    partial void OnTenNhaCungCapChanged();
    partial void OnNgayHopTacChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHopTacChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._HOADONNHs = new EntitySet<HOADONNH>(new Action<HOADONNH>(this.attach_HOADONNHs), new Action<HOADONNH>(this.detach_HOADONNHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhaCungCap", DbType="NVarChar(100)")]
		public string TenNhaCungCap
		{
			get
			{
				return this._TenNhaCungCap;
			}
			set
			{
				if ((this._TenNhaCungCap != value))
				{
					this.OnTenNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._TenNhaCungCap = value;
					this.SendPropertyChanged("TenNhaCungCap");
					this.OnTenNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHopTac", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHopTac
		{
			get
			{
				return this._NgayHopTac;
			}
			set
			{
				if ((this._NgayHopTac != value))
				{
					this.OnNgayHopTacChanging(value);
					this.SendPropertyChanging();
					this._NgayHopTac = value;
					this.SendPropertyChanged("NgayHopTac");
					this.OnNgayHopTacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_HOADONNH", Storage="_HOADONNHs", ThisKey="ID", OtherKey="NSX")]
		public EntitySet<HOADONNH> HOADONNHs
		{
			get
			{
				return this._HOADONNHs;
			}
			set
			{
				this._HOADONNHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONNHs(HOADONNH entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_HOADONNHs(HOADONNH entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private System.DateTime _NgayDangKi;
		
		private string _HoTen;
		
		private string _SoDienThoai;
		
		private System.Nullable<bool> _TrangThai;
		
		private System.Nullable<int> _LoaiTK;
		
		private EntityRef<LOAITK> _LOAITK1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnNgayDangKiChanging(System.DateTime value);
    partial void OnNgayDangKiChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnLoaiTKChanging(System.Nullable<int> value);
    partial void OnLoaiTKChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._LOAITK1 = default(EntityRef<LOAITK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDangKi", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayDangKi
		{
			get
			{
				return this._NgayDangKi;
			}
			set
			{
				if ((this._NgayDangKi != value))
				{
					this.OnNgayDangKiChanging(value);
					this.SendPropertyChanging();
					this._NgayDangKi = value;
					this.SendPropertyChanged("NgayDangKi");
					this.OnNgayDangKiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTK", DbType="Int")]
		public System.Nullable<int> LoaiTK
		{
			get
			{
				return this._LoaiTK;
			}
			set
			{
				if ((this._LoaiTK != value))
				{
					if (this._LOAITK1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiTKChanging(value);
					this.SendPropertyChanging();
					this._LoaiTK = value;
					this.SendPropertyChanged("LoaiTK");
					this.OnLoaiTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITK_TAIKHOAN", Storage="_LOAITK1", ThisKey="LoaiTK", OtherKey="ID", IsForeignKey=true)]
		public LOAITK LOAITK1
		{
			get
			{
				return this._LOAITK1.Entity;
			}
			set
			{
				LOAITK previousValue = this._LOAITK1.Entity;
				if (((previousValue != value) 
							|| (this._LOAITK1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITK1.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._LOAITK1.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._LoaiTK = value.ID;
					}
					else
					{
						this._LoaiTK = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAITK1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAN")]
	public partial class BAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenBan;
		
		private System.Nullable<int> _TrangThai;
		
		private System.Nullable<int> _status;
		
		private EntitySet<HOADONBH> _HOADONBHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenBanChanging(string value);
    partial void OnTenBanChanged();
    partial void OnTrangThaiChanging(System.Nullable<int> value);
    partial void OnTrangThaiChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public BAN()
		{
			this._HOADONBHs = new EntitySet<HOADONBH>(new Action<HOADONBH>(this.attach_HOADONBHs), new Action<HOADONBH>(this.detach_HOADONBHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBan", DbType="NVarChar(50)")]
		public string TenBan
		{
			get
			{
				return this._TenBan;
			}
			set
			{
				if ((this._TenBan != value))
				{
					this.OnTenBanChanging(value);
					this.SendPropertyChanging();
					this._TenBan = value;
					this.SendPropertyChanged("TenBan");
					this.OnTenBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_HOADONBH", Storage="_HOADONBHs", ThisKey="ID", OtherKey="MaBan")]
		public EntitySet<HOADONBH> HOADONBHs
		{
			get
			{
				return this._HOADONBHs;
			}
			set
			{
				this._HOADONBHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONBHs(HOADONBH entity)
		{
			this.SendPropertyChanging();
			entity.BAN = this;
		}
		
		private void detach_HOADONBHs(HOADONBH entity)
		{
			this.SendPropertyChanging();
			entity.BAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenKH;
		
		private string _SoDienThoai;
		
		private string _DiaChi;
		
		private System.Data.Linq.Binary _Hinh;
		
		private System.Nullable<bool> _TrangThai;
		
		private System.Nullable<bool> _Nu;
		
		private EntitySet<HOADONBH> _HOADONBHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnHinhChanging(System.Data.Linq.Binary value);
    partial void OnHinhChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnNuChanging(System.Nullable<bool> value);
    partial void OnNuChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONBHs = new EntitySet<HOADONBH>(new Action<HOADONBH>(this.attach_HOADONBHs), new Action<HOADONBH>(this.detach_HOADONBHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(100)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nu", DbType="Bit")]
		public System.Nullable<bool> Nu
		{
			get
			{
				return this._Nu;
			}
			set
			{
				if ((this._Nu != value))
				{
					this.OnNuChanging(value);
					this.SendPropertyChanging();
					this._Nu = value;
					this.SendPropertyChanged("Nu");
					this.OnNuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONBH", Storage="_HOADONBHs", ThisKey="ID", OtherKey="MaKH")]
		public EntitySet<HOADONBH> HOADONBHs
		{
			get
			{
				return this._HOADONBHs;
			}
			set
			{
				this._HOADONBHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONBHs(HOADONBH entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONBHs(HOADONBH entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAINV")]
	public partial class LOAINV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LoaiNV1;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLoaiNV1Changing(string value);
    partial void OnLoaiNV1Changed();
    #endregion
		
		public LOAINV()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LoaiNV", Storage="_LoaiNV1", DbType="NChar(10)")]
		public string LoaiNV1
		{
			get
			{
				return this._LoaiNV1;
			}
			set
			{
				if ((this._LoaiNV1 != value))
				{
					this.OnLoaiNV1Changing(value);
					this.SendPropertyChanging();
					this._LoaiNV1 = value;
					this.SendPropertyChanged("LoaiNV1");
					this.OnLoaiNV1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAINV_NHANVIEN", Storage="_NHANVIENs", ThisKey="ID", OtherKey="LoaiNV")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAINV1 = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAINV1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenSP;
		
		private int _DonGia;
		
		private System.Data.Linq.Binary _Hinh;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<CHITIETHDBH> _CHITIETHDBHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnDonGiaChanging(int value);
    partial void OnDonGiaChanged();
    partial void OnHinhChanging(System.Data.Linq.Binary value);
    partial void OnHinhChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CHITIETHDBHs = new EntitySet<CHITIETHDBH>(new Action<CHITIETHDBH>(this.attach_CHITIETHDBHs), new Action<CHITIETHDBH>(this.detach_CHITIETHDBHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(100)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int NOT NULL")]
		public int DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHDBH", Storage="_CHITIETHDBHs", ThisKey="ID", OtherKey="SanPham")]
		public EntitySet<CHITIETHDBH> CHITIETHDBHs
		{
			get
			{
				return this._CHITIETHDBHs;
			}
			set
			{
				this._CHITIETHDBHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHDBHs(CHITIETHDBH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM1 = this;
		}
		
		private void detach_CHITIETHDBHs(CHITIETHDBH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADONNH")]
	public partial class HOADONNH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _NV;
		
		private System.Nullable<int> _NSX;
		
		private System.Nullable<int> _SP;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _DonGia;
		
		private System.Nullable<int> _ThanhTien;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<NGUYENLIEU> _NGUYENLIEU;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNVChanging(System.Nullable<int> value);
    partial void OnNVChanged();
    partial void OnNSXChanging(System.Nullable<int> value);
    partial void OnNSXChanged();
    partial void OnSPChanging(System.Nullable<int> value);
    partial void OnSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public HOADONNH()
		{
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._NGUYENLIEU = default(EntityRef<NGUYENLIEU>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NV", DbType="Int")]
		public System.Nullable<int> NV
		{
			get
			{
				return this._NV;
			}
			set
			{
				if ((this._NV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNVChanging(value);
					this.SendPropertyChanging();
					this._NV = value;
					this.SendPropertyChanged("NV");
					this.OnNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSX", DbType="Int")]
		public System.Nullable<int> NSX
		{
			get
			{
				return this._NSX;
			}
			set
			{
				if ((this._NSX != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNSXChanging(value);
					this.SendPropertyChanging();
					this._NSX = value;
					this.SendPropertyChanged("NSX");
					this.OnNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP", DbType="Int")]
		public System.Nullable<int> SP
		{
			get
			{
				return this._SP;
			}
			set
			{
				if ((this._SP != value))
				{
					if (this._NGUYENLIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSPChanging(value);
					this.SendPropertyChanging();
					this._SP = value;
					this.SendPropertyChanged("SP");
					this.OnSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_HOADONNH", Storage="_NHACUNGCAP", ThisKey="NSX", OtherKey="ID", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.HOADONNHs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.HOADONNHs.Add(this);
						this._NSX = value.ID;
					}
					else
					{
						this._NSX = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENLIEU_HOADONNH", Storage="_NGUYENLIEU", ThisKey="SP", OtherKey="ID", IsForeignKey=true)]
		public NGUYENLIEU NGUYENLIEU
		{
			get
			{
				return this._NGUYENLIEU.Entity;
			}
			set
			{
				NGUYENLIEU previousValue = this._NGUYENLIEU.Entity;
				if (((previousValue != value) 
							|| (this._NGUYENLIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUYENLIEU.Entity = null;
						previousValue.HOADONNHs.Remove(this);
					}
					this._NGUYENLIEU.Entity = value;
					if ((value != null))
					{
						value.HOADONNHs.Add(this);
						this._SP = value.ID;
					}
					else
					{
						this._SP = default(Nullable<int>);
					}
					this.SendPropertyChanged("NGUYENLIEU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADONNH", Storage="_NHANVIEN", ThisKey="NV", OtherKey="ID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONNHs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONNHs.Add(this);
						this._NV = value.ID;
					}
					else
					{
						this._NV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LUONG")]
	public partial class LUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NV;
		
		private System.Nullable<int> _TenNV;
		
		private System.Nullable<int> _LuongCB;
		
		private System.Nullable<int> _Thuong;
		
		private System.Nullable<int> _TongLuong;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NVChanging(int value);
    partial void OnID_NVChanged();
    partial void OnTenNVChanging(System.Nullable<int> value);
    partial void OnTenNVChanged();
    partial void OnLuongCBChanging(System.Nullable<int> value);
    partial void OnLuongCBChanged();
    partial void OnThuongChanging(System.Nullable<int> value);
    partial void OnThuongChanged();
    partial void OnTongLuongChanging(System.Nullable<int> value);
    partial void OnTongLuongChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public LUONG()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					this.OnID_NVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV = value;
					this.SendPropertyChanged("ID_NV");
					this.OnID_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="Int")]
		public System.Nullable<int> TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongCB", DbType="Int")]
		public System.Nullable<int> LuongCB
		{
			get
			{
				return this._LuongCB;
			}
			set
			{
				if ((this._LuongCB != value))
				{
					this.OnLuongCBChanging(value);
					this.SendPropertyChanging();
					this._LuongCB = value;
					this.SendPropertyChanged("LuongCB");
					this.OnLuongCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thuong", DbType="Int")]
		public System.Nullable<int> Thuong
		{
			get
			{
				return this._Thuong;
			}
			set
			{
				if ((this._Thuong != value))
				{
					this.OnThuongChanging(value);
					this.SendPropertyChanging();
					this._Thuong = value;
					this.SendPropertyChanged("Thuong");
					this.OnThuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongLuong", DbType="Int")]
		public System.Nullable<int> TongLuong
		{
			get
			{
				return this._TongLuong;
			}
			set
			{
				if ((this._TongLuong != value))
				{
					this.OnTongLuongChanging(value);
					this.SendPropertyChanging();
					this._TongLuong = value;
					this.SendPropertyChanged("TongLuong");
					this.OnTongLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LUONG", Storage="_NHANVIEN", ThisKey="TenNV", OtherKey="ID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.LUONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.LUONGs.Add(this);
						this._TenNV = value.ID;
					}
					else
					{
						this._TenNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUYENLIEU")]
	public partial class NGUYENLIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenSP;
		
		private System.Nullable<int> _DonGia;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<HOADONNH> _HOADONNHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public NGUYENLIEU()
		{
			this._HOADONNHs = new EntitySet<HOADONNH>(new Action<HOADONNH>(this.attach_HOADONNHs), new Action<HOADONNH>(this.detach_HOADONNHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(100)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENLIEU_HOADONNH", Storage="_HOADONNHs", ThisKey="ID", OtherKey="SP")]
		public EntitySet<HOADONNH> HOADONNHs
		{
			get
			{
				return this._HOADONNHs;
			}
			set
			{
				this._HOADONNHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONNHs(HOADONNH entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENLIEU = this;
		}
		
		private void detach_HOADONNHs(HOADONNH entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENLIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHDBH")]
	public partial class CHITIETHDBH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHD;
		
		private System.DateTime _Ngay;
		
		private int _SanPham;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntityRef<SANPHAM> _SANPHAM1;
		
		private EntityRef<HOADONBH> _HOADONBH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHDChanging(int value);
    partial void OnIDHDChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnSanPhamChanging(int value);
    partial void OnSanPhamChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public CHITIETHDBH()
		{
			this._SANPHAM1 = default(EntityRef<SANPHAM>);
			this._HOADONBH = default(EntityRef<HOADONBH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHD
		{
			get
			{
				return this._IDHD;
			}
			set
			{
				if ((this._IDHD != value))
				{
					if (this._HOADONBH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHDChanging(value);
					this.SendPropertyChanging();
					this._IDHD = value;
					this.SendPropertyChanged("IDHD");
					this.OnIDHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SanPham
		{
			get
			{
				return this._SanPham;
			}
			set
			{
				if ((this._SanPham != value))
				{
					if (this._SANPHAM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamChanging(value);
					this.SendPropertyChanging();
					this._SanPham = value;
					this.SendPropertyChanged("SanPham");
					this.OnSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHDBH", Storage="_SANPHAM1", ThisKey="SanPham", OtherKey="ID", IsForeignKey=true)]
		public SANPHAM SANPHAM1
		{
			get
			{
				return this._SANPHAM1.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM1.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM1.Entity = null;
						previousValue.CHITIETHDBHs.Remove(this);
					}
					this._SANPHAM1.Entity = value;
					if ((value != null))
					{
						value.CHITIETHDBHs.Add(this);
						this._SanPham = value.ID;
					}
					else
					{
						this._SanPham = default(int);
					}
					this.SendPropertyChanged("SANPHAM1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADONBH_CHITIETHDBH", Storage="_HOADONBH", ThisKey="IDHD", OtherKey="ID", IsForeignKey=true)]
		public HOADONBH HOADONBH
		{
			get
			{
				return this._HOADONBH.Entity;
			}
			set
			{
				HOADONBH previousValue = this._HOADONBH.Entity;
				if (((previousValue != value) 
							|| (this._HOADONBH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADONBH.Entity = null;
						previousValue.CHITIETHDBHs.Remove(this);
					}
					this._HOADONBH.Entity = value;
					if ((value != null))
					{
						value.CHITIETHDBHs.Add(this);
						this._IDHD = value.ID;
					}
					else
					{
						this._IDHD = default(int);
					}
					this.SendPropertyChanged("HOADONBH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADONBH")]
	public partial class HOADONBH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MaNV;
		
		private System.Nullable<int> _MaBan;
		
		private System.Nullable<bool> _TrangThai;
		
		private System.Nullable<int> _MaKH;
		
		private System.Nullable<int> _TongTien;
		
		private EntitySet<CHITIETHDBH> _CHITIETHDBHs;
		
		private EntityRef<BAN> _BAN;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    partial void OnMaBanChanging(System.Nullable<int> value);
    partial void OnMaBanChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    #endregion
		
		public HOADONBH()
		{
			this._CHITIETHDBHs = new EntitySet<CHITIETHDBH>(new Action<CHITIETHDBH>(this.attach_CHITIETHDBHs), new Action<CHITIETHDBH>(this.detach_CHITIETHDBHs));
			this._BAN = default(EntityRef<BAN>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBan", DbType="Int")]
		public System.Nullable<int> MaBan
		{
			get
			{
				return this._MaBan;
			}
			set
			{
				if ((this._MaBan != value))
				{
					if (this._BAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBanChanging(value);
					this.SendPropertyChanging();
					this._MaBan = value;
					this.SendPropertyChanged("MaBan");
					this.OnMaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADONBH_CHITIETHDBH", Storage="_CHITIETHDBHs", ThisKey="ID", OtherKey="IDHD")]
		public EntitySet<CHITIETHDBH> CHITIETHDBHs
		{
			get
			{
				return this._CHITIETHDBHs;
			}
			set
			{
				this._CHITIETHDBHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_HOADONBH", Storage="_BAN", ThisKey="MaBan", OtherKey="ID", IsForeignKey=true)]
		public BAN BAN
		{
			get
			{
				return this._BAN.Entity;
			}
			set
			{
				BAN previousValue = this._BAN.Entity;
				if (((previousValue != value) 
							|| (this._BAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAN.Entity = null;
						previousValue.HOADONBHs.Remove(this);
					}
					this._BAN.Entity = value;
					if ((value != null))
					{
						value.HOADONBHs.Add(this);
						this._MaBan = value.ID;
					}
					else
					{
						this._MaBan = default(Nullable<int>);
					}
					this.SendPropertyChanged("BAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONBH", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="ID", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONBHs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONBHs.Add(this);
						this._MaKH = value.ID;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADONBH", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="ID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONBHs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONBHs.Add(this);
						this._MaNV = value.ID;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHDBHs(CHITIETHDBH entity)
		{
			this.SendPropertyChanging();
			entity.HOADONBH = this;
		}
		
		private void detach_CHITIETHDBHs(CHITIETHDBH entity)
		{
			this.SendPropertyChanging();
			entity.HOADONBH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _HoTenNV;
		
		private string _DiaChi;
		
		private string _CMND;
		
		private string _SoDienThoai;
		
		private System.Nullable<System.DateTime> _NgayNhanViec;
		
		private System.Nullable<bool> _Nu;
		
		private System.Data.Linq.Binary _Hinh;
		
		private System.Nullable<bool> _TrangThai;
		
		private System.Nullable<int> _LoaiNV;
		
		private EntitySet<HOADONNH> _HOADONNHs;
		
		private EntitySet<LUONG> _LUONGs;
		
		private EntitySet<HOADONBH> _HOADONBHs;
		
		private EntityRef<LOAINV> _LOAINV1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHoTenNVChanging(string value);
    partial void OnHoTenNVChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnNgayNhanViecChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhanViecChanged();
    partial void OnNuChanging(System.Nullable<bool> value);
    partial void OnNuChanged();
    partial void OnHinhChanging(System.Data.Linq.Binary value);
    partial void OnHinhChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnLoaiNVChanging(System.Nullable<int> value);
    partial void OnLoaiNVChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._HOADONNHs = new EntitySet<HOADONNH>(new Action<HOADONNH>(this.attach_HOADONNHs), new Action<HOADONNH>(this.detach_HOADONNHs));
			this._LUONGs = new EntitySet<LUONG>(new Action<LUONG>(this.attach_LUONGs), new Action<LUONG>(this.detach_LUONGs));
			this._HOADONBHs = new EntitySet<HOADONBH>(new Action<HOADONBH>(this.attach_HOADONBHs), new Action<HOADONBH>(this.detach_HOADONBHs));
			this._LOAINV1 = default(EntityRef<LOAINV>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNV", DbType="NVarChar(100)")]
		public string HoTenNV
		{
			get
			{
				return this._HoTenNV;
			}
			set
			{
				if ((this._HoTenNV != value))
				{
					this.OnHoTenNVChanging(value);
					this.SendPropertyChanging();
					this._HoTenNV = value;
					this.SendPropertyChanged("HoTenNV");
					this.OnHoTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(50)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhanViec", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhanViec
		{
			get
			{
				return this._NgayNhanViec;
			}
			set
			{
				if ((this._NgayNhanViec != value))
				{
					this.OnNgayNhanViecChanging(value);
					this.SendPropertyChanging();
					this._NgayNhanViec = value;
					this.SendPropertyChanged("NgayNhanViec");
					this.OnNgayNhanViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nu", DbType="Bit")]
		public System.Nullable<bool> Nu
		{
			get
			{
				return this._Nu;
			}
			set
			{
				if ((this._Nu != value))
				{
					this.OnNuChanging(value);
					this.SendPropertyChanging();
					this._Nu = value;
					this.SendPropertyChanged("Nu");
					this.OnNuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiNV", DbType="Int")]
		public System.Nullable<int> LoaiNV
		{
			get
			{
				return this._LoaiNV;
			}
			set
			{
				if ((this._LoaiNV != value))
				{
					if (this._LOAINV1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._LoaiNV = value;
					this.SendPropertyChanged("LoaiNV");
					this.OnLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADONNH", Storage="_HOADONNHs", ThisKey="ID", OtherKey="NV")]
		public EntitySet<HOADONNH> HOADONNHs
		{
			get
			{
				return this._HOADONNHs;
			}
			set
			{
				this._HOADONNHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LUONG", Storage="_LUONGs", ThisKey="ID", OtherKey="TenNV")]
		public EntitySet<LUONG> LUONGs
		{
			get
			{
				return this._LUONGs;
			}
			set
			{
				this._LUONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADONBH", Storage="_HOADONBHs", ThisKey="ID", OtherKey="MaNV")]
		public EntitySet<HOADONBH> HOADONBHs
		{
			get
			{
				return this._HOADONBHs;
			}
			set
			{
				this._HOADONBHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAINV_NHANVIEN", Storage="_LOAINV1", ThisKey="LoaiNV", OtherKey="ID", IsForeignKey=true)]
		public LOAINV LOAINV1
		{
			get
			{
				return this._LOAINV1.Entity;
			}
			set
			{
				LOAINV previousValue = this._LOAINV1.Entity;
				if (((previousValue != value) 
							|| (this._LOAINV1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAINV1.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._LOAINV1.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._LoaiNV = value.ID;
					}
					else
					{
						this._LoaiNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAINV1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONNHs(HOADONNH entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONNHs(HOADONNH entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_LUONGs(LUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_LUONGs(LUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HOADONBHs(HOADONBH entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONBHs(HOADONBH entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
}
#pragma warning restore 1591
